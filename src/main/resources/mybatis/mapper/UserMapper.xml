<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.miracle.manage.dao.UserDao" >
    <select id="getUserInfoByUid" parameterType="int" resultType="User">
        select id,role,loginName,userName,password,picturePath,createTime,lastTime from `user`
        where id = #{id}
    </select>
    <select id="getAllUsers" resultType="User">
        select id,role,loginName,userName,password,picturePath,createTime,lastTime from `user`
    </select>
    <insert id="addUser" parameterType="User" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        insert into `user` (role,loginName,userName,password,picturePath,createTime,lastTime)
        values(#{role},#{loginName},#{userName},#{password},#{picturePath},#{createTime},#{lastTime})
    </insert>
    <update id="updateUser" parameterType="User" >
        update `user` set role=#{role},userName=#{userName},picturePath=#{picturePath}
        where id=#{id}
    </update>
    <delete id="delUserByUid" parameterType="int">
        delete from `user` where id = #{id}
    </delete>
    <update id="updateUserPwd" parameterType="User">
        update `user` set password = #{password} where id = #{id}
    </update>
    <select id="getUserListByName"  resultType="User">
        select id,role,loginName,userName,password,picturePath,createTime,lastTime from `user` where
        loginName like '%${name}%' or userName like '%${name}%'
    </select>
    <insert id="addProductsToUser" parameterType="User">
        insert into `user_product` (userID,userName,productID,productName) values
        <foreach item="product" collection="productList" separator=",">
            (#{id},#{loginName}, #{product.id},#{product.productName})
        </foreach>
    </insert>
    <select id="getUserProducts" parameterType="int" resultMap="selectUserProducts">
        SELECT userID,userName,productID,productName from user_product where userID= #{id}
    </select>

    <resultMap id="selectUserProducts" type="User">
        <result column="userID" property="id"/>
        <result column="userName" property="userName"/>
        <collection property="productList" ofType="Product">
            <result column="productID" property="id"/>
            <result column="productName" property="productName"/>
        </collection>
    </resultMap>

</mapper>
